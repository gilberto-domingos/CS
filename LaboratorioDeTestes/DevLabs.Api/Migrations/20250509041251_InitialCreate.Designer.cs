// <auto-generated />
using System;
using DevLabs.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevLabs.Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250509041251_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Car", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Chassi")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Chassi = 123456,
                            Name = "Ferrari 488 GTB"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Chassi = 234567,
                            Name = "Lamborghini Aventador"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Chassi = 345678,
                            Name = "Porsche 911 Turbo"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Chassi = 456789,
                            Name = "BMW M5 Competition"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Chassi = 567890,
                            Name = "Audi R8 V10"
                        });
                });

            modelBuilder.Entity("DevLabs.Api.Entities.Autor", b =>
                {
                    b.Property<Guid>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAutor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("DevLabs.Api.Entities.Livro", b =>
                {
                    b.Property<Guid>("IdLivro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutorIdAutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAutor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLivro");

                    b.HasIndex("AutorIdAutor");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("DevLabs.Api.Entities.Livro", b =>
                {
                    b.HasOne("DevLabs.Api.Entities.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorIdAutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("DevLabs.Api.Entities.Autor", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
